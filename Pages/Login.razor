@page "/login"
@using MetaMonkeysStore.ServerApp.Data
@inject EmployeeService employeeService
@inject IJSRuntime js
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager navManager


<div class="row">
    <div class="col-lg-4 offset-leg-4 pt-4 pb-4 border">
        <div class="mb-3 text-center">
            <h3>LOGIN</h3>
        </div>

        <div class="mb-3">
            <label>User Name</label>
            <input @bind="model.userName" class="form-control" placeholder="User Name" />
        </div>
        <div class="mb-3">
            <label>Password</label>
            <input @bind="model.password" type="password" class="form-control" placeholder="Password" />
        </div>
        <div class="mb-3 d-grid gap-2">
            <label>User Name</label>
            <button @onclick="Authenticate" class="btn btn-primary">Login</button>
        </div>  
    </div> 
</div>


@code {
    private class Model
    {
        public string userName;
        public string password;
    }

    private Model model = new Model();

    private async Task Authenticate()
    {
        var employeeAccount = await employeeService.GetEmployeeByUsername(model.userName);

        if (employeeAccount == null || employeeAccount.Password != model.password)
        {
            await js.InvokeVoidAsync("alert", "Invalid User Name or Password");
            return;
        }

        var customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;
        await customAuthStateProvider.UpdateAuthenticationState(new EmployeeSession
            {
                UserName = employeeAccount.Username,
                Role = employeeAccount.Role

            });
        navManager.NavigateTo("/", true);
    }
}
 